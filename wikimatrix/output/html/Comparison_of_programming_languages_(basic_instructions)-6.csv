"","Text","Text","Boolean , URL: /wiki/Boolean_datatype
","Enumeration , URL: /wiki/Enumerated_type
","Object , URL: /wiki/Object_(computer_science)
Universal , URL: /wiki/Top_type
"
"","Character , URL: /wiki/Character_(computing)
","String , URL: /wiki/String_(computer_science)
","Boolean , URL: /wiki/Boolean_datatype
","Enumeration , URL: /wiki/Enumerated_type
","Object , URL: /wiki/Object_(computer_science)
Universal , URL: /wiki/Top_type
"
"Ada , URL: /wiki/Ada_(programming_language)
","Character","String, Bounded_String, Unbounded_String","Boolean","( item1, item2, ... )","tagged null record"
"ALGOL 68","char","string, bytes","bool, bits","User defined , URL: http://rosettacode.org/wiki/Enumerations#ALGOL_68
","N/A"
"C (C99)","char, wchar_t","N/A","bool[b]","enum «name» { item1, item2, ... };","void *"
"C++ (STL)","char, wchar_t","«std::»string","bool[b]","enum «name» { item1, item2, ... };","void *"
"Objective-C","unichar","NSString *","BOOL","enum «name» { item1, item2, ... };","id"
"C#","char","string","bool","enum name { item1« = value», item2« = value», ... }","object"
"Java","char","String","boolean","enum name { item1, item2, ... }","Object"
"Go","byte, rune","string","bool","const (
  item1 = iota
  item2
  ...
)","interface{}"
"Rust","char","String","bool","enum name { item1« = value», item2« = value», ... }","std::any::Any"
"Swift","Character","String","Bool","enum name { case item1, item2, ... }","Any"
"D","char","string","bool","enum name { item1, item2, ... }","std.variant.Variant"
"Common Lisp","character","string","boolean","(member item1 item2 ...)","t"
"Scheme","","","","",""
"ISLISP","","","","",""
"Pascal (ISO)","char","N/A","boolean","( item1, item2, ... )","N/A"
"Object Pascal (Delphi)","char","string","boolean","( item1, item2, ... )","variant"
"Visual Basic","N/A","String","Boolean","Enum name
  item1 «= value»
  item2 «= value»
  ...
End Enum","Variant"
"Visual Basic .NET","Char","String","Boolean","Enum name
  item1 «= value»
  item2 «= value»
  ...
End Enum",""
"Xojo","N/A","String","Boolean","Enum name
  item1 «= value»
  item2 «= value»
  ...
End Enum",""
"Python","N/A[d]","str","bool","from enum import Enum
class Name(Enum):
  item1 = value
  item2 = value
  ...","object"
"JavaScript","N/A[d]","String","Boolean","","Object"
"S-Lang","","","","",""
"Fortran","CHARACTER(LEN = *)","CHARACTER(LEN = :), allocatable","LOGICAL(KIND = n)[f]","","CLASS(*)"
"PHP","N/A[d]","string","bool","","(type declaration omitted)"
"Perl","N/A[d]","","","","UNIVERSAL"
"Raku","Char","Str","Bool","enum name<item1 item2 ...> enum name <<:item1(value) :item2(value) ..>>","Mu"
"Ruby","N/A[d]","String","Object[c]","","Object"
"Scala","Char","String","Boolean","object name extends Enumeration {
  val item1, item2, ... = Value
}","Any"
"Seed7","char","string","boolean","const type: name is new enum
  item1,
  item2,
  ...
end enum;",""
"Windows PowerShell","","","","",""
"OCaml","char","string","bool","N/A[e]","N/A"
"F#","char","string","bool","",""
"Standard ML","char","string","bool","",""
"Haskell (GHC)","Char","String","Bool","N/A[e]","N/A"
"Eiffel","CHARACTER","STRING","BOOLEAN","N/A","ANY"
"COBOL","PIC X","PIC X(string length) or PIC X«X...»","PIC 1«(number of digits)» or PIC 1«1...»","N/A","OBJECT REFERENCE"
"Mathematica","N/A[d]","String","","","N/A"
